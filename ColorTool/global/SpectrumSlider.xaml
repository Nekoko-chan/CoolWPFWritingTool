<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:customControls="clr-namespace:CustomControls;assembly=CustomControls">
    <ResourceDictionary.MergedDictionaries>
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="SliderRepeatButtonStyle"
         TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
            Value="true"/>
        <Setter Property="IsTabStop"
            Value="false"/>
        <Setter Property="Focusable"
            Value="false"/>
        <Setter Property="Background"
            Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style 
     x:Key="theThumb" 
     TargetType="{x:Type customControls:ColorThumb}">

        <Setter Property="PointerOutlineBrush"
      Value="Transparent" />
        <Setter Property="PointerOutlineThickness"
      Value="0" />
        <Setter Property="Foreground" Value="{x:Null}"/>
        <Setter Property="ThumbColor" Value="Transparent" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControls:ColorThumb}">

                    <Border Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Ellipse Name="arrow" Height="10" VerticalAlignment="Center">
                                <Ellipse.Fill>
                                    <SolidColorBrush  Color="{Binding ThumbColor, RelativeSource={RelativeSource TemplatedParent}}"  />
                                </Ellipse.Fill>
                            </Ellipse>
                            <Ellipse
                Name="glassArrow" Height="10" VerticalAlignment="Center"
                Stroke="{TemplateBinding PointerOutlineBrush}" 
                StrokeThickness="{TemplateBinding PointerOutlineThickness}"
                Fill="Transparent">
                            </Ellipse>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsDragging" Value="False">
                            <Setter Property="BitmapEffect" TargetName="glassArrow">
                                <Setter.Value>
                                    <BitmapEffectGroup>
                                        <DropShadowBitmapEffect />
                                    </BitmapEffectGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground"
                      Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="theSpectrumSlider"
             TargetType="{x:Type customControls:SpectrumSlider}">
        <Setter Property="Orientation"
            Value="Vertical"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled"
            Value="false"/>
        <Setter Property="Background"
            Value="Transparent"/>
        <Setter Property="Foreground"
            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Minimum"
            Value="0"/>
        <Setter Property="Maximum" Value="100"/>
        <Setter Property="TickFrequency"
            Value="0.001" />
        <Setter Property="IsSnapToTickEnabled"
            Value="True" />
        <Setter Property="IsDirectionReversed" Value="False" />
        <Setter Property="Value" Value="1" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControls:SpectrumSlider}">
                    <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                            Cursor="{TemplateBinding Cursor}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Height="{TemplateBinding Height}">
                        <Grid>


                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"
                  MinWidth="{TemplateBinding Slider.MinWidth}"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <Border x:Name="PART_TrackBackground"
                Grid.Column="1" Width="20" Cursor="{TemplateBinding Cursor}" Margin="10,0,10,0">
                                <Rectangle x:Name="PART_SpectrumDisplay"  Cursor="{TemplateBinding Cursor}"
                  Stretch="Fill" VerticalAlignment="Stretch" />
                                <Border.BitmapEffect>
                                    <BevelBitmapEffect BevelWidth="3"
                    EdgeProfile="BulgedUp" Relief="0.3" />
                                </Border.BitmapEffect>
                            </Border>


                            <Canvas Grid.Column="1"
                      HorizontalAlignment="Center"
                      Width="4">
                                <Rectangle x:Name="PART_SelectionRange"
                  Canvas.Left="1"
                  Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                  Width="2.0"
                  Visibility="Hidden" />
                            </Canvas>

                            <Track Grid.Column="1" Name="PART_Track">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}"
                                Command="Slider.DecreaseLarge"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}"
                    Command="Slider.IncreaseLarge"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <customControls:ColorThumb 
                    x:Name="Thumb"
                                        Style="{StaticResource theThumb}"
                    Height="20"
                    ThumbColor="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!-- Display SelectionRange background -->
                        <Trigger Property="IsSelectionRangeEnabled" Value="True">
                            <Setter TargetName="PART_SelectionRange"
                 Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Width" Value="Auto">
                            <Setter Property="MinWidth" Value="21"/>
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="104"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
</ResourceDictionary>