<messageBoxes:MessageResultWindow x:Class="ComplexWriter.MessageBoxes.ErrorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        WindowStartupLocation="CenterOwner"
        ShowInTaskbar="True"
        Closing="UpdateSizeAndLocation"
        Width="700" Height="400"
        xmlns:messageBoxes="clr-namespace:ComplexWriter.MessageBoxes"
        xmlns:commands1="clr-namespace:ComplexWriter.Commands"
        xmlns:listViewLayout="clr-namespace:Itenso.Windows.Controls.ListViewLayout;assembly=Itenso.Windows.Controls.ListViewLayout"
        xmlns:complexWriter="clr-namespace:ComplexWriter"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:customControls="clr-namespace:CustomControls;assembly=CustomControls"
        xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        Title="Fehlermeldungen..." >
    <Window.InputBindings>
        <KeyBinding Key="O" Command="{x:Static commands1:OkCommand.OkOnEnterOrO}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=messageBoxes:ErrorWindow}}" />
        <KeyBinding Key="Enter" Command="{x:Static commands1:OkCommand.OkOnEnterOrO}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=messageBoxes:ErrorWindow}}" />
        <KeyBinding Key="Escape" Command="{x:Static commands1:OkCommand.OkOnEnterOrO}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=messageBoxes:ErrorWindow}}" />
    </Window.InputBindings>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ErrorWindowDictionary.xaml"/>
                <ResourceDictionary Source="../global/global.xaml"/>
                <ResourceDictionary Source="../global/Scrollbars.xaml"/>
                <ResourceDictionary Source="../global/Expander.xaml"/>
                <ResourceDictionary Source="../global/GridView.xaml"/>
                <ResourceDictionary Source="../global/ToggleButton.xaml"/>
                    
                <ResourceDictionary Source="../global/UpDowns.xaml"/>
                <ResourceDictionary Source="../global/Combobox.xaml"/>
                <ResourceDictionary>

                    <SolidColorBrush x:Key="ErrorBrush" Color="#7FD62E2E"/>
                    <SolidColorBrush x:Key="WarningBrush" Color="#7FFFE800"/>
                    <SolidColorBrush x:Key="InfoBrush" Color="#33000000"/>
                    <SolidColorBrush x:Key="NoneBrush" Color="#7FFFFFFF"/>

                    <Style x:Key="bord" TargetType="Border">
                        <Setter Property="Margin" Value="-5,0,30,0"/>
                    </Style>
                    
                    <system:Double x:Key="MinScale">0.8</system:Double>
                    
                    

                    <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource nonSelection}">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="VerticalContentAlignment" Value="Top" />
                        <Setter Property="MaxWidth" Value="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border x:Name="Border" Margin="2,0,0,0" Background="{TemplateBinding Background}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Padding="3">
                                        <Grid>
                                            <GridViewRowPresenter TextBlock.Foreground="{StaticResource BackColorBrush}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                                        </Grid>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                <Setter Property="Background" Value="Transparent"></Setter>
                            </Trigger>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                <Setter Property="Background" Value="#33000000"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    
                    <Style x:Key="iconBord" TargetType="Border">
                        <Setter Property="BorderBrush" Value="Black"/>
                        <Setter Property="Padding" Value="2"/>
                    </Style>

                    <GridView x:Key="ExpenseView2">
                        <GridViewColumn Header="" listViewLayout:RangeColumn.MinWidth="32" listViewLayout:RangeColumn.MaxWidth="101" HeaderContainerStyle="{StaticResource styleGridViewColumnLeft}">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate DataType="complexWriter:ErrorMessageItem" >
                                    <Border Width="24" Height="24" RenderOptions.BitmapScalingMode="HighQuality" VerticalAlignment="Center" HorizontalAlignment="Center" Background="{StaticResource BackColorBrush}">
                                        <Border.OpacityMask>
                                            <MultiBinding Converter="{StaticResource IsNewestElementMultiConverter}">
                                                <Binding/>
                                                <Binding Path="ForUpdateTrigger"/>
                                                <Binding RelativeSource="{RelativeSource AncestorType=ListView}" Path="Items"/>
                                            </MultiBinding>
                                        </Border.OpacityMask>
                                    </Border>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="" listViewLayout:RangeColumn.MinWidth="32" listViewLayout:RangeColumn.MaxWidth="101" HeaderContainerStyle="{StaticResource styleGridViewColumnLeft}">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate DataType="complexWriter:ErrorMessageItem" >
                                    <Border Width="24" Height="24" RenderOptions.BitmapScalingMode="HighQuality" VerticalAlignment="Center" HorizontalAlignment="Center" Background="{Binding Severity,Converter={StaticResource SeverityColorBrushConverter}}" OpacityMask="{Binding Severity,Converter={StaticResource SeverityImageBrushConverter}}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Zeit" listViewLayout:RangeColumn.MinWidth="100" listViewLayout:RangeColumn.MaxWidth="101" HeaderContainerStyle="{StaticResource styleGridViewColumnLeft}">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate DataType="complexWriter:ErrorMessageItem" >
                                    <TextBlock VerticalAlignment="Top" Text="{Binding OccuranceTime, StringFormat={}{0:HH:mm:ss}}" FontFamily="{StaticResource defaultFont}"></TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Meldungstext" listViewLayout:RangeColumn.IsFillColumn="True" HeaderContainerStyle="{StaticResource styleGridViewColumnLeft}">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate  DataType="complexWriter:ErrorMessageItem">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <ToggleButton x:Name="ToggleButton" Style="{StaticResource ToggleBtnStyle}" Visibility="{Binding CanShowDetails,Converter={StaticResource falseCollapsedConverter}}" IsChecked="{Binding ShowsDetails,Mode=TwoWay}">
                                            
                                        </ToggleButton>
                                        <TextBlock Grid.Row="0" Grid.Column="1" VerticalAlignment="Top" FontFamily="{StaticResource defaultFont}" Text="{Binding Message, Mode=OneWay}"
                                                   TextTrimming="WordEllipsis"/>
                                        <Border Padding="5" Background="#22000000" Grid.Row="1" Grid.Column="1"  Visibility="{Binding ShowsDetails, Converter={StaticResource falseCollapsedConverter}}" >
                                            <TextBox Style="{StaticResource realtextBoxStyle}"
                                                     Text="{Binding Stacktrace, Mode=OneWay}" FontFamily="{StaticResource defaultFont}"
                                                     TextWrapping="WrapWithOverflow" IsReadOnly="True"
                                                     IsReadOnlyCaretVisible="True"/>
                                            </Border>
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                    </GridView>

                    <!--
                            Irgendwann vielleicht... müsste dafür nämlich leider alles neu machen...
                    <CollectionViewSource x:Key="PersonsViewSource" IsLiveGroupingRequested="True" IsLiveSortingRequested="True" Source="{Binding Source={x:Static complexWriter:MainWindow.Global},Path=ErrorMessages}" >
                        <CollectionViewSource.GroupDescriptions>
                            <PropertyGroupDescription PropertyName="GroupName" />
                        </CollectionViewSource.GroupDescriptions>
                        <CollectionViewSource.SortDescriptions>
                            <componentModel:SortDescription PropertyName="OccuranceTime" Direction="Ascending"/>
                        </CollectionViewSource.SortDescriptions>
                    </CollectionViewSource>-->


                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid Cursor="{StaticResource standardCursor}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
       
        <Border Grid.Row="1" Grid.Column="1" Effect="{StaticResource WindowShadow}" Style="{StaticResource bord}" BorderThickness="1" BorderBrush="#FF054049"></Border>
        <Border Grid.Row="1" Grid.Column="1" Style="{StaticResource bord}"  Background="{StaticResource BackgroundBrush}">

            <Grid>
                <Thumb Effect="{StaticResource WindowShadow}" Grid.Row="0" VerticalAlignment="Top" Height="10" Margin="0,-3,20,0"
                                                   Cursor="{StaticResource moveCursor}" DragDelta="MoveWindow"
                                                   Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                    <Thumb.Template>
                        <ControlTemplate TargetType="Thumb">
                            <Border Background="{StaticResource BackColorBrush}" CornerRadius="10,0,10,10" />
                        </ControlTemplate>
                    </Thumb.Template>
                </Thumb>
            </Grid>
        </Border>
        <Border Grid.Column="1" Grid.Row="1" Style="{StaticResource bord}" Background="{StaticResource background}" IsHitTestVisible="False"/>

        <Grid Grid.Row="1" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel Orientation="Horizontal" Margin="5,10,5,0" HorizontalAlignment="Left">
                <Border Style="{StaticResource iconBord}" CornerRadius="5,0,0,5" BorderThickness="1" >
                    <Border.Background>
                        <MultiBinding Converter="{StaticResource IconBackMultiValueConverter}">
                            <Binding Source="{StaticResource InfoBrush}"/>
                            <Binding ElementName="Infobtn" Path="IsChecked"/>
                        </MultiBinding>
                    </Border.Background>
                    <ToggleButton Style="{StaticResource SimpleToggleStyle}" Foreground="Black" IsChecked="True" Name="Infobtn" Checked="UpdateFilter" Unchecked="UpdateFilter">
                        <Border Background="Black" Width="24" Height="24" RenderOptions.BitmapScalingMode="HighQuality">
                            <Border.OpacityMask>
                                <ImageBrush ImageSource="../Images/info.png" Stretch="Uniform"></ImageBrush>
                            </Border.OpacityMask>
                        </Border>
                    </ToggleButton>
                </Border>
                <!--
                       ToDO: Wieder hinzufügen, sollte ich mal passende Nachrichten produzieren
                <Border  Style="{StaticResource iconBord}" BorderThickness="0,1,0,1" >
                    <Border.Background>
                        <MultiBinding Converter="{StaticResource IconBackMultiValueConverter}">
                            <Binding Source="{StaticResource WarningBrush}"/>
                            <Binding ElementName="WarningBtn" Path="IsChecked"/>
                        </MultiBinding>
                    </Border.Background>
                    <ToggleButton Style="{StaticResource SimpleToggleStyle}" Foreground="Black"  IsChecked="True" Name="WarningBtn" Checked="UpdateFilter" Unchecked="UpdateFilter">
                        <Border Background="Black" Width="24" Height="24" RenderOptions.BitmapScalingMode="HighQuality">
                            <Border.OpacityMask>
                                <ImageBrush ImageSource="../Images/Warning.png" Stretch="Uniform"></ImageBrush>
                            </Border.OpacityMask>
                        </Border>
                    </ToggleButton></Border>-->
                <Border  Style="{StaticResource iconBord}" CornerRadius="0,5,5,0" BorderThickness="1">
                    <Border.Background>
                        <MultiBinding Converter="{StaticResource IconBackMultiValueConverter}">
                            <Binding Source="{ StaticResource ErrorBrush}"/>
                            <Binding ElementName="ErrorBtn" Path="IsChecked"/>
                        </MultiBinding>
                    </Border.Background>
                    <ToggleButton Style="{StaticResource SimpleToggleStyle}" Foreground="Black"  IsChecked=" true" Name="ErrorBtn" Checked="UpdateFilter" Unchecked="UpdateFilter">
                        <Border Background="Black" Width="24" Height="24" RenderOptions.BitmapScalingMode="HighQuality">
                            <Border.OpacityMask>
                                <ImageBrush ImageSource="../Images/errorNuke.png" Stretch="Uniform"></ImageBrush>
                            </Border.OpacityMask>
                        </Border>
                    </ToggleButton></Border>
                <!--
                  ToDO: Wieder hinzufügen, sollte ich mal passende Nachrichten produzieren
                <Border Style="{StaticResource iconBord}" CornerRadius="0,5,5,0" BorderThickness="1" >
                    <Border.Background>
                        <MultiBinding Converter="{StaticResource IconBackMultiValueConverter}">
                            <Binding Source="{StaticResource NoneBrush}"/>
                            <Binding ElementName="NoneBtn" Path="IsChecked"/>
                        </MultiBinding>
                    </Border.Background>
                    <ToggleButton Style="{StaticResource SimpleToggleStyle}" Foreground="Black"  IsChecked=" true" Name="NoneBtn" Checked="UpdateFilter" Unchecked="UpdateFilter">
                        <Border Background="Black" Width="24" Height="24" RenderOptions.BitmapScalingMode="HighQuality">
                            <Border.OpacityMask>
                                <ImageBrush ImageSource="../Images/errorNuke.png" Stretch="Uniform"></ImageBrush>
                            </Border.OpacityMask>
                        </Border>
                    </ToggleButton>
                </Border>-->
            </StackPanel>
            <ListView ItemContainerStyle="{StaticResource ListViewItemStyle}" Grid.Row="1"
                      Cursor="{StaticResource standardCursor}" x:Name="messageList"
                      Style="{StaticResource testview}" Margin="5,5,60,15" View="{StaticResource ExpenseView2}"
                      AlternationCount="2" Background="Transparent" listViewLayout:ListViewLayoutManager.Enabled="true"
                      ButtonBase.Click="results_Click">
               
            </ListView>
        </Grid>

        <Border Grid.Column="0" Grid.Row="1"  Background="{StaticResource BackColorBrush}"  MinWidth="22" Padding="4,10" CornerRadius="10,0,0,10" Effect="{StaticResource WindowShadow}" Margin="0,-3,0,15">
            <StackPanel>
                <customControls:MaskedImageButtonEnlarge Width="24" Height="24" Cursor="{StaticResource overCursor}"
                                                         ButtonColor="{DynamicResource TitleBrush}" ButtonMask="../Images/DeleteAll.png" Click="ClearList">
                    <Button.ToolTip>
                        <ToolTip Style="{StaticResource tipTest}" Content="Leeren"/>
                    </Button.ToolTip>
                </customControls:MaskedImageButtonEnlarge>
              
                <customControls:MaskedImageButtonEnlarge Width="24" Height="24" Cursor="{StaticResource overCursor}" ButtonColor="{DynamicResource TitleBrush}" ButtonMask="../Images/expandAll.png" Click="ExpandAll">
                    <Button.ToolTip>
                        <ToolTip Style="{StaticResource tipTest}" Content="Alle Expandieren"/>
                    </Button.ToolTip>
                </customControls:MaskedImageButtonEnlarge>
                <customControls:MaskedImageButtonEnlarge Width="24" Height="24" Cursor="{StaticResource overCursor}" ButtonColor="{DynamicResource TitleBrush}" ButtonMask="../Images/collapseAll.png" Click="CollapseAll">
                    <Button.ToolTip>
                        <ToolTip Style="{StaticResource tipTest}" Content="Alle Kollabieren"/>
                    </Button.ToolTip>
                </customControls:MaskedImageButtonEnlarge>
            </StackPanel>
        </Border>

        
    </Grid>
</messageBoxes:MessageResultWindow>
