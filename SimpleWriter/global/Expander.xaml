<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../ColorSet/Colors.xaml"></ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <system:Double x:Key="MinScale">0.76</system:Double>
    <system:Double x:Key="MaxScale">0.94</system:Double>
    <Cursor x:Key="overCursor">../Images/cursor2.cur</Cursor>

    <Style x:Key="ToggleBtnStyle" TargetType="ToggleButton">
        <Setter Property="Cursor" Value="{StaticResource overCursor}"/>
        <Setter Property="Margin" Value="0,0,0,0"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource TitleBrush}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding BorderBrush}">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            <Border Width="24" Height="24" Name="Border" Margin="0,0,10,0" HorizontalAlignment="Right" Background="{TemplateBinding Foreground}"
                                RenderTransformOrigin="0.5,0.5" RenderOptions.BitmapScalingMode="HighQuality">
                                <Border.OpacityMask>
                                    <ImageBrush ImageSource="/Images/arrowDown.png" Stretch="Uniform" />
                                </Border.OpacityMask>
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="{StaticResource MinScale}"
                                                    ScaleY="{StaticResource MinScale}" x:Name="theScale" />
                                        <RotateTransform Angle="-90" x:Name="theAngle" />
                                    </TransformGroup>
                                </Border.RenderTransform>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="theAngle" Storyboard.TargetProperty="Angle" To="0" Duration="00:00:00.300"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="theAngle" Storyboard.TargetProperty="Angle" To="-90" Duration="00:00:00.300"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="theScale" Storyboard.TargetProperty="ScaleX" To="{StaticResource MaxScale}" Duration="00:00:00.300"></DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="theScale" Storyboard.TargetProperty="ScaleY" To="{StaticResource MaxScale}" Duration="00:00:00.300"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="theScale" Storyboard.TargetProperty="ScaleX" To="{StaticResource MinScale}" Duration="00:00:00.300"></DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="theScale" Storyboard.TargetProperty="ScaleY" To="{StaticResource MinScale}" Duration="00:00:00.300"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleBtnStyleLeft" TargetType="ToggleButton">
        <Setter Property="Cursor" Value="{StaticResource overCursor}"/>
        <Setter Property="Margin" Value="0,0,0,0"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource TitleBrush}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{DynamicResource TitleBrush}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border Width="24" Height="24" Name="Border" Margin="0,0,10,0" HorizontalAlignment="left" Background="{DynamicResource BackColorBrush}"
                                RenderTransformOrigin="0.5,0.5" RenderOptions.BitmapScalingMode="HighQuality">
                                <Border.OpacityMask>
                                    <ImageBrush ImageSource="/Images/arrowDown.png" Stretch="Uniform" />
                                </Border.OpacityMask>
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="{StaticResource MinScale}"
                                                    ScaleY="{StaticResource MinScale}" x:Name="theScale" />
                                        <RotateTransform Angle="-90" x:Name="theAngle" />
                                    </TransformGroup>
                                </Border.RenderTransform>
                            </Border>
                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center" Grid.Column="1"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="theAngle" Storyboard.TargetProperty="Angle" To="0" Duration="00:00:00.300"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="theAngle" Storyboard.TargetProperty="Angle" To="-90" Duration="00:00:00.300"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="theScale" Storyboard.TargetProperty="ScaleX" To="{StaticResource MaxScale}" Duration="00:00:00.300"></DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="theScale" Storyboard.TargetProperty="ScaleY" To="{StaticResource MaxScale}" Duration="00:00:00.300"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="theScale" Storyboard.TargetProperty="ScaleX" To="{StaticResource MinScale}" Duration="00:00:00.300"></DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="theScale" Storyboard.TargetProperty="ScaleY" To="{StaticResource MinScale}" Duration="00:00:00.300"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleBtnStyle2" TargetType="ToggleButton">
        <Setter Property="Cursor" Value="{StaticResource overCursor}"/>
        <Setter Property="Margin" Value="0,0,0,0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                        <Border Width="24" Height="24" Name="Border" Margin="0,0,10,0" HorizontalAlignment="Right" Background="{DynamicResource TitleBrush}"
                                RenderTransformOrigin="0.5,0.5" RenderOptions.BitmapScalingMode="HighQuality">
                            <Border.OpacityMask>
                                <ImageBrush ImageSource="/Images/arrowDown.png" Stretch="Uniform" />
                            </Border.OpacityMask>
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="{StaticResource MinScale}"
                                                    ScaleY="{StaticResource MinScale}" x:Name="theScale" />
                                    <RotateTransform Angle="-90" x:Name="theAngle" />
                                </TransformGroup>
                            </Border.RenderTransform>
                        </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="theAngle" Storyboard.TargetProperty="Angle" To="0" Duration="00:00:00.300"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="theAngle" Storyboard.TargetProperty="Angle" To="-90" Duration="00:00:00.300"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="theScale" Storyboard.TargetProperty="ScaleX" To="{StaticResource MaxScale}" Duration="00:00:00.300"></DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="theScale" Storyboard.TargetProperty="ScaleY" To="{StaticResource MaxScale}" Duration="00:00:00.300"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="theScale" Storyboard.TargetProperty="ScaleX" To="{StaticResource MinScale}" Duration="00:00:00.300"></DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="theScale" Storyboard.TargetProperty="ScaleY" To="{StaticResource MinScale}" Duration="00:00:00.300"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TheExpander" TargetType="Expander">
        <Setter Property="BorderBrush" Value="{DynamicResource PlayerBorderBrush}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="{TemplateBinding BorderThickness}"
          Background="{TemplateBinding Background}" CornerRadius="3"
                SnapsToDevicePixels="true">
                        <DockPanel>
                        <ToggleButton DockPanel.Dock="Top" Focusable="False"
                                      BorderBrush="{TemplateBinding BorderBrush}" Style="{StaticResource ToggleBtnStyle}" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IsExpanded, Mode=TwoWay}">
                            <ContentPresenter   Margin="10,5" Content="{TemplateBinding Header}" IsHitTestVisible="False"
                                                  TextBlock.Foreground="{DynamicResource PlayerTitleBrush}"
                                                  TextBlock.FontFamily="{DynamicResource GroupBoxTitle}"
                                                  TextBlock.FontSize="{DynamicResource TitleFontSize}" />
                        </ToggleButton>
                        <Border  DockPanel.Dock="Top"  ClipToBounds="True" Name="ClipBorder" >
                            <Border BorderBrush="{TemplateBinding BorderBrush}" Name="ContentBorder" BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter Content="{TemplateBinding Content}" />
                                <Border.LayoutTransform>
                                    <ScaleTransform ScaleY="0"/>
                                </Border.LayoutTransform>
                            </Border>
                        </Border>
                    </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00.500" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="(Control.LayoutTransform).(ScaleTransform.ScaleY)" To="1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00.500" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="(Control.LayoutTransform).(ScaleTransform.ScaleY)" To="0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <!--<Setter TargetName="ClipBorder" Property="Visibility" Value="Collapsed"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ourAnimatedExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="Foreground"
             Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">

                    <ControlTemplate.Resources>
                        <ResourceDictionary>
                            <Storyboard x:Key="scaleYUp">
                                <DoubleAnimation From="0" To="1" Duration="0:0:0.25" 
Storyboard.TargetName="ExpandSite"
Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleY)" />
                            </Storyboard>
                            <Storyboard x:Key="scaleYDown">
                                <DoubleAnimation From="1" To="0" Duration="0:0:0.25" 
Storyboard.TargetName="ExpandSite"
Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleY)" />
                            </Storyboard>
                            <Storyboard x:Key="scaleXUp">
                                <DoubleAnimation From="0" To="1" Duration="0:0:0.25"
Storyboard.TargetName="ExpandSite"
Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleX)" />
                            </Storyboard>
                            <Storyboard x:Key="scaleXDown">
                                <DoubleAnimation From="1" To="0" Duration="0:0:0.25"  
Storyboard.TargetName="ExpandSite"
Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleX)" />
                            </Storyboard>
                        </ResourceDictionary>
                    </ControlTemplate.Resources>

                    <Border BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="{TemplateBinding BorderThickness}"
          Background="{TemplateBinding Background}" CornerRadius="3"
                SnapsToDevicePixels="true">
                        <DockPanel Background="Aqua">
                            <ToggleButton
              IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, 
                                    RelativeSource={RelativeSource TemplatedParent}}"
              Margin="1" MinHeight="0" MinWidth="0" x:Name="HeaderSite"
              Style="{StaticResource ToggleBtnStyle2}">
                                <ContentPresenter Content="{TemplateBinding Header}"
                ContentTemplate="{TemplateBinding HeaderTemplate}"
                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                    Margin="1"
                Focusable="false" />
                            </ToggleButton>

                            <ContentPresenter x:Name="ExpandSite"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              Margin="{TemplateBinding Padding}" Focusable="false">
                                <ContentPresenter.LayoutTransform>
                                    <ScaleTransform x:Name="scaleTransform" ScaleX="1" ScaleY="1" />
                                </ContentPresenter.LayoutTransform>
                            </ContentPresenter>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded" Value="True" />
                                <Condition Property="ExpandDirection" Value="Up" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource scaleYUp}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource scaleYDown}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded" Value="True" />
                                <Condition Property="ExpandDirection" Value="Down" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource scaleYUp}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource scaleYDown}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded" Value="True" />
                                <Condition Property="ExpandDirection" Value="Left" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource scaleXUp}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource scaleXDown}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded" Value="True" />
                                <Condition Property="ExpandDirection" Value="Right" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource scaleXUp}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource scaleXDown}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <Trigger Property="ExpandDirection" Value="Down">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Bottom" />
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Top" />

                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top" />
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom" />
                            <Setter Property="Style" TargetName="HeaderSite"
              Value="{DynamicResource ExpanderUpHeaderStyle}" />

                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right" />
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left" />
                            <Setter Property="Style" TargetName="HeaderSite"
              Value="{DynamicResource ExpanderRightHeaderStyle}" />

                        </Trigger>

                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left" />
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right" />
                            <Setter Property="Style" TargetName="HeaderSite"
              Value="{DynamicResource ExpanderLeftHeaderStyle}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="TheExpanderLeft" TargetType="Expander">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Border 
          Background="{TemplateBinding Background}" CornerRadius="3"
                SnapsToDevicePixels="true">
                        <DockPanel>
                            <ToggleButton DockPanel.Dock="Top" Focusable="False"
                                      BorderBrush="{DynamicResource BackColorBrush}" Style="{StaticResource ToggleBtnStyleLeft}" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IsExpanded, Mode=TwoWay}">
                                <ContentPresenter   Margin="10,5" Content="{TemplateBinding Header}" IsHitTestVisible="False"
                                                  TextBlock.Foreground="{DynamicResource PlayerTitleBrush}"
                                                  TextBlock.FontFamily="{DynamicResource GroupBoxTitle}"
                                                  TextBlock.FontSize="{DynamicResource TitleFontSize}" />
                            </ToggleButton>
                            <Border  DockPanel.Dock="Top"  ClipToBounds="True" Name="ClipBorder" Visibility="Collapsed" >
                                <Border Name="ContentBorder" 
                                    Padding="{TemplateBinding Padding}">
                                    <ContentPresenter Content="{TemplateBinding Content}" />
                                </Border>
                            </Border>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ClipBorder" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>