<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:global="clr-namespace:ComplexWriter.global"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="global.xaml"/>
        <ResourceDictionary Source="Scrollbars.xaml"/>
        <ResourceDictionary Source="../ColorSet/Colors.xaml"/>
        <ResourceDictionary>
            
            
    <Style x:Key="context" TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="FontFamily" Value="{StaticResource defaultFont}"></Setter>
                <Setter Property="FontSize" Value="{StaticResource fontSizeMedium}"></Setter>
                <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="Cursor" Value="{StaticResource standardCursor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Grid Margin="5" RenderTransformOrigin="0.5,0.5">
                        <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Border Grid.Row="0" Margin="2,2,2,0" Height="15" SnapsToDevicePixels="True" BorderThickness="1,1,1,0"  Background="{StaticResource BackColorBrush}" BorderBrush="{DynamicResource TitleBrush}">
                                    <Border.OpacityMask>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="Black" Offset="1"/>
                                            <GradientStop Color="Transparent" Offset="0.2"/>
                                        </LinearGradientBrush>
                                    </Border.OpacityMask>
                                </Border>
                                <Border Grid.Row="2" Height="15" Margin="2,0,2,2" SnapsToDevicePixels="True" BorderThickness="1,0,1,1"  Background="{StaticResource BackColorBrush}" BorderBrush="{DynamicResource TitleBrush}">
                                    <Border.OpacityMask>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="Black" Offset="0"/>
                                            <GradientStop Color="Transparent" Offset="0.8"/>
                                        </LinearGradientBrush>
                                    </Border.OpacityMask>
                                </Border>
                                <Border Grid.Row="1" Margin="2,0" BorderThickness="1,0,1,0"  Padding="2" Background="{StaticResource BackColorBrush}" BorderBrush="{DynamicResource TitleBrush}">
                                    <Border Background="{StaticResource BackColorBrush}" Margin="5" BorderBrush="Transparent" ClipToBounds="True" BorderThickness="1">
                                        <Grid>
                                            <ScrollViewer VerticalScrollBarVisibility="Auto" Style="{StaticResource TopScroller}">
                                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="3"/>
                                            </ScrollViewer>
                                        </Grid>
                                    </Border>
                                </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


        
            <Style x:Key="context2" TargetType="{x:Type ContextMenu}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="FontFamily" Value="{StaticResource defaultFont}"></Setter>
                <Setter Property="FontSize" Value="{StaticResource fontSizeMedium}"></Setter>
                <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                <Setter Property="HasDropShadow" Value="True"/>
                <Setter Property="Cursor" Value="{StaticResource standardCursor}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContextMenu}">
                            <Grid Margin="5" RenderTransformOrigin="0.5,0.5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Border Grid.Row="0" Margin="2,2,2,0" Height="15" SnapsToDevicePixels="True" BorderThickness="1,1,1,0"  Background="{StaticResource BackColorBrush}" BorderBrush="{DynamicResource TitleBrush}">
                                    <Border.OpacityMask>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="Black" Offset="1"/>
                                            <GradientStop Color="Transparent" Offset="0.2"/>
                                        </LinearGradientBrush>
                                    </Border.OpacityMask>
                                </Border>
                                <Border Grid.Row="2" Height="15" Margin="2,0,2,2" SnapsToDevicePixels="True" BorderThickness="1,0,1,1"  Background="{StaticResource BackColorBrush}" BorderBrush="{DynamicResource TitleBrush}">
                                    <Border.OpacityMask>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="Black" Offset="0"/>
                                            <GradientStop Color="Transparent" Offset="0.8"/>
                                        </LinearGradientBrush>
                                    </Border.OpacityMask>
                                </Border>
                                <Border Grid.Row="1" Margin="2,0" BorderThickness="1,0,1,0"  Padding="2" Background="{StaticResource BackColorBrush}" BorderBrush="{DynamicResource TitleBrush}">
                                    <Border Background="{StaticResource BackColorBrush}" Margin="5" BorderBrush="Transparent" ClipToBounds="True" BorderThickness="1">
                                        <Grid>
                                            <ScrollViewer VerticalScrollBarVisibility="Auto" Style="{StaticResource TopScroller}">
                                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="3"/>
                                            </ScrollViewer>
                                        </Grid>
                                    </Border>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <SolidColorBrush x:Key="selectionFore" Color="#FFBD6012"/>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Height" Value="1"/>
        <Setter Property="Margin" Value="0,4,0,4"/>
                <Setter Property="Cursor" Value="{StaticResource standardCursor}"/>
                <Setter Property="Template">
                    <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                            <Border BorderBrush="{StaticResource BackColorBrush}" BorderThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

            <system:Double x:Key="MinScale">0.8</system:Double>
            <system:Double x:Key="MaxScale">1</system:Double>
            <ControlTemplate 
  x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" 
  TargetType="{x:Type MenuItem}">
        <Border Name="Border" CornerRadius="3" Background="{TemplateBinding Background}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="CheckMark"/>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                            <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                        <TextBlock Name="check" FontSize="17" Grid.Column="1" FontFamily="{StaticResource defaultFont}" VerticalAlignment="Center" Margin="5,0,10,0" Visibility="Collapsed" Foreground="{TemplateBinding Foreground}" Text="&#x2714;"></TextBlock>
                        
                        <Border  Width="20" Height="20" Background="{TemplateBinding Foreground}" OpacityMask="{TemplateBinding Icon}"
        Name="Icon" Grid.Column="0" RenderOptions.BitmapScalingMode="HighQuality"
         RenderTransformOrigin="0.5,0.5"
                            Margin="5"
        VerticalAlignment="Center"
       >
                        </Border>
              
                        <Border Grid.Column="2" x:Name="backborder">
                            <ContentPresenter
                                Name="HeaderHost" Margin="6,5,6,5"
                                VerticalAlignment="Center"
                                ContentSource="Header"
                                TextBlock.Foreground="{TemplateBinding Foreground}"
                                RecognizesAccessKey="True" /></Border>
                <TextBlock x:Name="InputGestureText" VerticalAlignment="Center"
        Grid.Column="3"
        Text="{TemplateBinding InputGestureText}"
                           Foreground="{TemplateBinding Foreground}"
        Margin="5,2,0,2"
        DockPanel.Dock="Right" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
           
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="check" Property="Visibility" Value="Hidden"/>
            </Trigger>
                    <Trigger Property="IsChecked" Value="true">
                        <Setter TargetName="check" Property="Visibility" Value="Visible"/>
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)">
                                        <LinearColorKeyFrame KeyTime="00:00:00.300" Value="{StaticResource TitleColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)">
                                        <LinearColorKeyFrame KeyTime="00:00:00.300" Value="{StaticResource BackColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)">
                                        <LinearColorKeyFrame KeyTime="00:00:00.300" Value="{StaticResource TitleColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)">
                                        <LinearColorKeyFrame KeyTime="00:00:00.300" Value="{StaticResource BackColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
              
                    </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="Border" Property="Opacity" Value="0.4"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

            
            
            
            <ControlTemplate 
  x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" 
  TargetType="{x:Type MenuItem}">
                <Border Name="Border" Background="{TemplateBinding Background}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="CheckMark"/>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                            <ColumnDefinition Width="13"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Name="check" FontSize="17" Grid.Column="1" FontFamily="{StaticResource defaultFont}" VerticalAlignment="Center" Margin="5,0,10,0" Visibility="Collapsed" Foreground="{TemplateBinding Foreground}" Text="&#x2714;"></TextBlock>


                        <Border Grid.Column="0" Width="20" Height="20" RenderOptions.BitmapScalingMode="HighQuality"
        Name="Icon" Background="{TemplateBinding Foreground}" OpacityMask="{TemplateBinding Icon}"
         RenderTransformOrigin="0.5,0.5"
                            Margin="5"
        VerticalAlignment="Center"
       >
                     
                        </Border>
                      
                        <ContentPresenter 
        Name="HeaderHost"
        Grid.Column="2"
        ContentSource="Header"
                      Margin="6,0"
                            VerticalAlignment="Center"
        RecognizesAccessKey="True"/>
                        <TextBlock x:Name="InputGestureText"
        Grid.Column="3"
                                   VerticalAlignment="Center"
        Text="{TemplateBinding InputGestureText}"
        Margin="5,2,2,2"
        DockPanel.Dock="Right"/>
                        <Path 
        Grid.Column="4"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Data="M 0 0 L 0 7 L 4 3.5 Z" 
        Fill="{TemplateBinding Foreground}" />
                        <Popup 
        Name="Popup"
        Placement="Right"
                            MaxHeight="{x:Static SystemParameters.VirtualScreenHeight}"
        HorizontalOffset="-4" 
        IsOpen="{TemplateBinding IsSubmenuOpen}"
        AllowsTransparency="True" 
        Focusable="False"
        PopupAnimation="Fade">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Border Grid.Row="0" Height="15" SnapsToDevicePixels="True" BorderThickness="1,1,1,0"  Background="{StaticResource BackColorBrush}" BorderBrush="{DynamicResource TitleBrush}">
                                    <Border.OpacityMask>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="Black" Offset="1"/>
                                            <GradientStop Color="Transparent" Offset="0.2"/>
                                        </LinearGradientBrush>
                                    </Border.OpacityMask>
                                </Border>
                                <Border Grid.Row="2" Height="15" SnapsToDevicePixels="True" BorderThickness="1,0,1,1"  Background="{StaticResource BackColorBrush}" BorderBrush="{DynamicResource TitleBrush}">
                                    <Border.OpacityMask>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="Black" Offset="0"/>
                                            <GradientStop Color="Transparent" Offset="0.8"/>
                                        </LinearGradientBrush>
                                    </Border.OpacityMask>
                                </Border>
                                <Border Grid.Row="1"
          Name="SubmenuBorder"
          SnapsToDevicePixels="True"
          Background="{StaticResource BackColorBrush}"
          BorderBrush="{DynamicResource TitleBrush}"
          BorderThickness="1,0" >
                                <ScrollViewer CanContentScroll="True" VerticalScrollBarVisibility="Auto">
                                    <StackPanel  
                                Margin="8,5"
            IsItemsHost="True" 
            KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </ScrollViewer>
                            </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                </Border>

                <ControlTemplate.Triggers>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)">
                                        <LinearColorKeyFrame KeyTime="00:00:00.300" Value="{StaticResource TitleColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)">
                                        <LinearColorKeyFrame KeyTime="00:00:00.300" Value="{StaticResource BackColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)">
                                        <LinearColorKeyFrame KeyTime="00:00:00.300" Value="{StaticResource TitleColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)">
                                        <LinearColorKeyFrame KeyTime="00:00:00.300" Value="{StaticResource BackColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                  
                    </Trigger>
                    <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                        <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="Gray"/>
                    </Trigger>
                   
                    <Trigger Property="IsCheckable" Value="true">
                        <Setter TargetName="check" Property="Visibility" Value="Hidden"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="true">
                        <Setter TargetName="check" Property="Visibility" Value="Visible"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="menuItem" TargetType="{x:Type MenuItem}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Cursor" Value="{StaticResource overCursor}"/>
                <Setter Property="Background" >
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource BackColor}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource TitleColor}"></SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Role" Value="SubmenuItem">
                        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuHeader">
                        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="menuItem3" TargetType="{x:Type MenuItem}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Cursor" Value="{StaticResource overCursor}"/>
                <Setter Property="Background" >
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource BackColor}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource TitleColor}"></SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Role" Value="SubmenuItem">
                        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuHeader">
                        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <ControlTemplate x:Key="SubmenuItemTemplateKey2" 
  TargetType="{x:Type MenuItem}">
                <Border Name="Border" CornerRadius="3" Background="{TemplateBinding Background}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="CheckMark"/>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                            <ColumnDefinition Width="13"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Name="check" FontSize="17" Grid.Column="1" FontFamily="{StaticResource defaultFont}" VerticalAlignment="Center" Margin="5,0,10,0" Visibility="Collapsed" Foreground="{TemplateBinding Foreground}" Text="&#x2714;"></TextBlock>

                        <Border  Width="20" Height="20" Background="{TemplateBinding Foreground}" OpacityMask="{TemplateBinding Icon}"
        Name="Icon" Grid.Column="0" RenderOptions.BitmapScalingMode="HighQuality"
         RenderTransformOrigin="0.5,0.5"
                            Margin="5"
        VerticalAlignment="Center"
       >
                        </Border>

                        <Border Grid.Column="2" x:Name="backborder">
                            <ContentPresenter
                                Name="HeaderHost" Margin="6,5,6,5"
                                VerticalAlignment="Center"
                                ContentSource="Header"
                                TextBlock.Foreground="{TemplateBinding Foreground}"
                                RecognizesAccessKey="True" />
                        </Border>
                        <TextBlock x:Name="InputGestureText" VerticalAlignment="Center"
        Grid.Column="3"
        Text="{TemplateBinding InputGestureText}"
                           Foreground="{TemplateBinding Foreground}"
        Margin="5,2,0,2"
        DockPanel.Dock="Right" />
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
                    </Trigger>

                    <Trigger Property="IsCheckable" Value="true">
                        <Setter TargetName="check" Property="Visibility" Value="Hidden"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="true">
                        <Setter TargetName="check" Property="Visibility" Value="Visible"/>
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)">
                                        <LinearColorKeyFrame KeyTime="00:00:00.300" Value="{StaticResource TitleColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)">
                                        <LinearColorKeyFrame KeyTime="00:00:00.300" Value="{StaticResource BackColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)">
                                        <LinearColorKeyFrame KeyTime="00:00:00.300" Value="{StaticResource TitleColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)">
                                        <LinearColorKeyFrame KeyTime="00:00:00.300" Value="{StaticResource BackColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>

                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter TargetName="Border" Property="Opacity" Value="0.4"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>




            <ControlTemplate x:Key="SubmenuHeaderTemplateKey2" 
  TargetType="{x:Type MenuItem}">
                <Border Name="Border" Background="{TemplateBinding Background}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="CheckMark"/>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                            <ColumnDefinition Width="13"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Name="check" FontSize="17" Grid.Column="1" FontFamily="{StaticResource defaultFont}" VerticalAlignment="Center" Margin="5,0,10,0" Visibility="Collapsed" Foreground="{TemplateBinding Foreground}" Text="&#x2714;"></TextBlock>


                        <Border Grid.Column="0" Width="20" Height="20" RenderOptions.BitmapScalingMode="HighQuality"
        Name="Icon" Background="{TemplateBinding Foreground}" OpacityMask="{TemplateBinding Icon}"
         RenderTransformOrigin="0.5,0.5"
                            Margin="5"
        VerticalAlignment="Center"
       >

                        </Border>

                        <ContentPresenter 
        Name="HeaderHost"
        Grid.Column="2"
        ContentSource="Header"
                      Margin="6,0"
                            VerticalAlignment="Center"
        RecognizesAccessKey="True"/>
                        <TextBlock x:Name="InputGestureText"
        Grid.Column="3"
                                   VerticalAlignment="Center"
        Text="{TemplateBinding InputGestureText}"
        Margin="5,2,2,2"
        DockPanel.Dock="Right"/>
                        <Path 
        Grid.Column="4"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Data="M 0 0 L 0 7 L 4 3.5 Z" 
        Fill="{TemplateBinding Foreground}" />
                        <Popup 
        Name="Popup"
        Placement="Right"
                            MaxHeight="{x:Static SystemParameters.VirtualScreenHeight}"
        HorizontalOffset="-4" 
        IsOpen="{TemplateBinding IsSubmenuOpen}"
        AllowsTransparency="True" 
        Focusable="False"
        PopupAnimation="Fade">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Border Grid.Row="0" Height="15" SnapsToDevicePixels="True" BorderThickness="1,1,1,0"  Background="{StaticResource BackColorBrush}" BorderBrush="{DynamicResource TitleBrush}">
                                    <Border.OpacityMask>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="Black" Offset="1"/>
                                            <GradientStop Color="Transparent" Offset="0.2"/>
                                        </LinearGradientBrush>
                                    </Border.OpacityMask>
                                </Border>
                                <Border Grid.Row="2" Height="15" SnapsToDevicePixels="True" BorderThickness="1,0,1,1"  Background="{StaticResource BackColorBrush}" BorderBrush="{DynamicResource TitleBrush}">
                                    <Border.OpacityMask>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="Black" Offset="0"/>
                                            <GradientStop Color="Transparent" Offset="0.8"/>
                                        </LinearGradientBrush>
                                    </Border.OpacityMask>
                                </Border>
                                <Border Grid.Row="1"
          Name="SubmenuBorder"
          SnapsToDevicePixels="True"
          Background="{StaticResource BackColorBrush}"
          BorderBrush="{DynamicResource TitleBrush}"
          BorderThickness="1,0" >
                                    <ScrollViewer CanContentScroll="True" VerticalScrollBarVisibility="Auto">
                                        <StackPanel  
                                Margin="8,5"
            IsItemsHost="True" 
            KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                </Border>

                <ControlTemplate.Triggers>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)">
                                        <LinearColorKeyFrame KeyTime="00:00:00.300" Value="{StaticResource TitleColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)">
                                        <LinearColorKeyFrame KeyTime="00:00:00.300" Value="{StaticResource BackColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)">
                                        <LinearColorKeyFrame KeyTime="00:00:00.300" Value="{StaticResource TitleColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)">
                                        <LinearColorKeyFrame KeyTime="00:00:00.300" Value="{StaticResource BackColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>

                    </Trigger>
                    <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                        <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="Gray"/>
                    </Trigger>

                    <Trigger Property="IsCheckable" Value="true">
                        <Setter TargetName="check" Property="Visibility" Value="Hidden"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="true">
                        <Setter TargetName="check" Property="Visibility" Value="Visible"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>



            <Style x:Key="menuItem2" TargetType="{x:Type MenuItem}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Cursor" Value="{StaticResource overCursor}"/>
                <Setter Property="Background" Value="{StaticResource BackColorBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TitleBrush}"/>
                <Style.Triggers>
                    <Trigger Property="Role" Value="SubmenuItem">
                        <Setter Property="Template" Value="{StaticResource SubmenuItemTemplateKey2}"/>
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuHeader">
                        <Setter Property="Template" Value="{StaticResource  SubmenuHeaderTemplateKey2}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style  x:Key="shortsep" TargetType="Separator">
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Cursor" Value="{StaticResource standardCursor}"/>
                <Setter Property="Template">
                    <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Line Margin="0,5" Height="{TemplateBinding Height}" X2="1" Stretch="Uniform" Stroke="{DynamicResource TitleBrush}" HorizontalAlignment="Stretch" StrokeDashArray="10,2,4,2,2,25,2,2,4,2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <global:TagConverter x:Key="tagConverter"/>
    
    <Style  x:Key="titlesep" TargetType="Separator">
        <Setter Property="Height" Value="Auto" />
                <Setter Property="Cursor" Value="{StaticResource standardCursor}"/>
                <Setter Property="Template">

                    <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Line Height="1" X2="1" Stretch="Uniform" Margin="0,5" Stroke="{DynamicResource TitleBrush}" VerticalAlignment="Center"/>
                        <TextBlock Foreground="{DynamicResource TitleBrush}" Text="{TemplateBinding Tag,Converter={StaticResource tagConverter}}" VerticalAlignment="Center" FontFamily="{StaticResource defaultFont}" FontSize="16" FontStyle="Italic" Grid.Column="1"/>
                        <Line Grid.Column="2" Height="1" X2="1" Stretch="Uniform" Margin="0,5" Stroke="{DynamicResource TitleBrush}" VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

</ResourceDictionary>